# File: omne_node/Dockerfile.open_node
# Purpose: Dockerfile for the Open-Source Omne Node.

FROM python:3.10-slim

LABEL maintainer="OmneDAO Foundation <leadership@omne.foundation>"

# Install necessary system packages and dependencies, including git and ca-certificates
RUN apt-get update -y && \
    apt-get install -y \
        build-essential \
        python3-dev \
        curl \
        gnupg \
        git \
        libopenblas-dev \
        libssl-dev \
        zlib1g-dev \
        libffi-dev \
        cmake \
        ninja-build \
        libkrb5-dev \
        ca-certificates \
        unzip \
    && \
    # Install Node.js 18.x
    curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs && \
    # Install TypeScript globally
    npm install -g typescript && \
    # Clean up apt cache to reduce image size
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Verify git installation
RUN git --version

# Upgrade pip to the latest version
RUN pip install --upgrade pip

# Prevent git from prompting for credentials
ENV GIT_TERMINAL_PROMPT=0

# Install Python dependencies from the requirements.txt file
COPY requirements.txt /app/requirements.txt
RUN pip3 install --no-cache-dir -r /app/requirements.txt

# Set environment variables for Python and Node.js
ENV PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    NODE_ENV=development

# Set the working directory
WORKDIR /app

# Copy the requirements.txt first for better caching
COPY requirements.txt /app/requirements.txt

# Install Python dependencies
RUN pip3 install --no-cache-dir -r /app/requirements.txt

# Copy the project code
COPY ./app /app

# Exclude sensitive modules by using a separate directory or selective copy
# For simplicity, assuming main_open.py is present and required modules are omitted from requirements.txt

# Expose the port the app will run on
EXPOSE 3400

# Create a non-root user for better security
RUN useradd -m omneuser && \
    chown -R omneuser:omneuser /app

# Switch to the non-root user
USER omneuser

# Define the entry point for the container
ENTRYPOINT ["python3"]
CMD ["main.py"]  # Ensure that main.py is in /app
